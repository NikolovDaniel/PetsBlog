// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetBlog.Infrastructure.Data;

#nullable disable

namespace PetBlog.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PetBlog.Infrastructure.Data.Entities.Hate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PetId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Hates");
                });

            modelBuilder.Entity("PetBlog.Infrastructure.Data.Entities.Images", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PetId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("PetBlog.Infrastructure.Data.Entities.Love", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PetId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Loves");
                });

            modelBuilder.Entity("PetBlog.Infrastructure.Data.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("PetBlog.Infrastructure.Data.Entities.Hate", b =>
                {
                    b.HasOne("PetBlog.Infrastructure.Data.Entities.Pet", "Pet")
                        .WithMany("Hates")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetBlog.Infrastructure.Data.Entities.Images", b =>
                {
                    b.HasOne("PetBlog.Infrastructure.Data.Entities.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetBlog.Infrastructure.Data.Entities.Love", b =>
                {
                    b.HasOne("PetBlog.Infrastructure.Data.Entities.Pet", "Pet")
                        .WithMany("Loves")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetBlog.Infrastructure.Data.Entities.Pet", b =>
                {
                    b.Navigation("Hates");

                    b.Navigation("Loves");
                });
#pragma warning restore 612, 618
        }
    }
}
